// v.3 –¢–∞–Ω—Ü—ã —Å –º–æ–ª–æ—Ç–æ—á–∫–æ–º ;-) H–∏–∂–Ω–µ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –º–æ–ª–æ—Ç–æ—á–∫–∞
int liftAngle = 110;  // —É–≥–æ–ª —É–¥–µ—Ä–∂–∞–Ω–∏—è –º–æ–ª–æ—Ç–æ—á–∫–∞ (–º–µ–Ω—å—à–µ —É–≥–æ–ª - –≤—ã—à–µ –º–æ–ª–æ—Ç–æ—á–µ–∫)
int tailAngle = 126;  // –æ—Ç–ø—É—Å–∫–∞–Ω–∏–µ (—É–¥–∞—Ä) –∏ –µ—Å–ª–∏ —Å—Ç–∞–≤–∏–º 161-162 –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø—Ä–∏–≥–ª—É—à–µ–Ω–Ω—ã–π –Ω–æ—á–Ω–æ–π —É–¥–∞—Ä
int liftSpeed = 50;  // (1-100) –∑–∞–¥–µ—Ä–∂–∫–∞ —à–∞–≥–æ–≤ –≤ –º—Å –ø—Ä–∏ –≤–∑–≤–æ–¥–µ —á—Ç–æ–±—ã –º–µ–Ω—å—à–µ —à—É–º–∞ ;-)
int hitPrepDelay = 500;       // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –≤–∑–≤–æ–¥–æ–º –∏ —É–¥–∞—Ä–æ–º
int pauseBetweenHits = 10;  // –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —É–¥–∞—Ä–æ–º
const int SERVO_PIN = D6;

void chimesetup() {  
  delay(100);
  Serial.println("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ –∫—Ä–∞–π–Ω–µ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ...");
  sg90.attach(SERVO_PIN, 500, 2400); // –ø–æ–¥–∫–ª—é—á–∞–µ–º —Å–µ—Ä–≤–æ
  sg90.write(180);                   // —Ç—è–Ω–µ–º –≤ –∫—Ä–∞–π - "–Ω—É–ª–µ–≤–æ–π" —É–ø–æ—Ä
  delay(1000);                        // –≤—Ä–µ–º—è –Ω–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ç–æ—á–∫–∏
  sg90.write(tailAngle);             // –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –ø–æ–∑–∏—Ü–∏—é –æ–∂–∏–¥–∞–Ω–∏—è
  delay(500);                        // —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è
  sg90.detach();                     // –æ—Ç—Ü–µ–ø–ª—è–µ–º, —á—Ç–æ–±—ã –Ω–µ –¥—Ä–æ–∂–∞–ª–æ
  }


void smoothLift(int fromAngle, int toAngle) { // ?? –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–ª–∞–≤–Ω–æ–≥–æ –≤–∑–≤–æ–¥–∞
  if (fromAngle == toAngle) return;
  int direction = (fromAngle < toAngle) ? 1 : -1;
  for (int a = fromAngle; a != toAngle; a += direction) {
    sg90.write(a);
    delay(liftSpeed); // –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç–∏
    }
    sg90.write(toAngle); // —Ñ–∏–Ω–∞–ª—å–Ω–∞—è —Ç–æ—á–∫–∞
}

void hit(int count) {
  count = constrain(count, 1, 12);
  Serial.print("‚ö° –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ–π: ");
  Serial.print(count);
  Serial.println(" —É–¥–∞—Ä–æ–≤");

  sg90.attach(SERVO_PIN, 500, 2400);
  sg90.setPeriodHertz(50);  // —Å—Ç–∞–±–∏–ª—å–Ω—ã–π —á–∞—Å—Ç–æ—Ç–Ω—ã–π —Ä–µ–∂–∏–º

  for (int i = 0; i < count; i++) {
    Serial.print("üîº –í–∑–≤–æ–¥ ‚Ññ"); Serial.println(i + 1);

    smoothLift(tailAngle, liftAngle);   // –ø–æ–¥–Ω—è—Ç–∏–µ –º–æ–ª–æ—Ç–æ—á–∫–∞
    delay(hitPrepDelay);                // –≤—ã–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —É–¥–∞—Ä–æ–º

    sg90.write(tailAngle);              // –£–î–ê–†!
    Serial.println("‚ö° –£–¥–∞—Ä!");
    delay(100);                         // —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è

    if (i < count - 1) delay(pauseBetweenHits);
  }

  sg90.detach();  // —É–±–∏—Ä–∞–µ–º —à–∏–º, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–µ–Ω –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —á–∞—Å–∞
  Serial.println("‚úÖ –ë–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω.");
}

void chimesloop() {  
  if (Serial.available()) {
    String cmd = Serial.readStringUntil('\n');
    cmd.trim();

    if (cmd.startsWith("hit")) {
      int count = 1;
      if (cmd.length() > 4) {
        count = cmd.substring(4).toInt();
        count = constrain(count, 1, 12); // –æ–≥—Ä–∞–Ω–∏—á–∏–º –¥–∏–∞–ø–∞–∑–æ–Ω
      }

      Serial.print("–£–¥–∞—Ä–æ–≤ –∑–∞–ø—Ä–æ—à–µ–Ω–æ: ");
      Serial.println(count);

      for (int i = 0; i < count; i++) {
        sg90.attach(SERVO_PIN, 500, 2400);

        Serial.print("–í–∑–≤–æ–¥ ‚Ññ");
        Serial.println(i + 1);
        int currentAngle = tailAngle; // –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é
        smoothLift(currentAngle, liftAngle); // –ø–ª–∞–≤–Ω—ã–π –≤–∑–≤–æ–¥
        delay(hitPrepDelay);    // –¥–∞—Ç—å —Å–µ—Ä–≤–æ –≤—Ä–µ–º—è –Ω–∞ –≤–∑–≤–æ–¥...
        sg90.attach(SERVO_PIN, 500, 2400);
        delay(100); // –¥–∞—Ç—å SG90 –≤—Ä–µ–º—è –Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        sg90.write(tailAngle);  // –∏ —É–¥–∞—Ä! 

        Serial.println("–£–¥–∞—Ä!");
        delay(100); // —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏—è
        sg90.detach();

        if (i < count - 1) {
          delay(pauseBetweenHits); // –ø–∞—É–∑–∞ –º–µ–∂–¥—É —É–¥–∞—Ä–∞–º–∏
        }
      }
      Serial.println("–°–µ—Ä–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.");

    } else if (cmd.startsWith("lift ")) {
      int val = cmd.substring(5).toInt();
      if (val >= 0 && val <= 180) {
        liftAngle = val;
        Serial.print("–ù–æ–≤—ã–π liftAngle: ");
        Serial.println(liftAngle);
      } else {
        Serial.println("–£–≥–æ–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 180");
      }

    } else if (cmd.startsWith("tail ")) {
      int val = cmd.substring(5).toInt();
      if (val >= 0 && val <= 180) {
        tailAngle = val;
        Serial.print("? –ù–æ–≤—ã–π tailAngle: ");
        Serial.println(tailAngle);
      } else {
        Serial.println("–£–≥–æ–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 180");
      }

    } else if (cmd.startsWith("speed ")) {
      int val = cmd.substring(6).toInt();
      if (val >= 1 && val <= 100) {
        liftSpeed = val;
        Serial.print("–ù–æ–≤–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤–∑–≤–æ–¥–∞: ");
        Serial.print(liftSpeed);
        Serial.println(" –º—Å/—à–∞–≥");
      } else {
        Serial.println("–°–∫–æ—Ä–æ—Å—Ç—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç 1 –¥–æ 100 –º—Å");
      }

    } else if (cmd == "status") {
      Serial.println("–¢–µ–∫—É—â–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:");
      Serial.print("liftAngle = ");
      Serial.print(liftAngle);
      Serial.println("¬∞");
      Serial.print("tailAngle = ");
      Serial.print(tailAngle);
      Serial.println("¬∞");
      Serial.print("liftSpeed = ");
      Serial.print(liftSpeed);
      Serial.println(" –º—Å/—à–∞–≥");

    } else {
      Serial.println("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü—Ä–∏–º–µ—Ä—ã:");
      Serial.println("  hit");
      Serial.println("  lift 120");
      Serial.println("  tail 180");
      Serial.println("  speed 15");
      Serial.println("  status");
    }
  }
}
